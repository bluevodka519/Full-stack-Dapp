name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Smart Contract Testing
  contract-tests:
    name: Smart Contract Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        
    - name: Install contract dependencies
      working-directory: ./contract
      run: npm install

    - name: Compile contracts
      working-directory: ./contract
      run: npx hardhat compile

    - name: Run contract tests
      working-directory: ./contract
      run: npm test

  # Frontend Testing and Build
  frontend-tests:
    name: Frontend Tests & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        
    - name: Install frontend dependencies
      working-directory: ./client
      run: npm install

    - name: Run ESLint
      working-directory: ./client
      run: npm run lint
      continue-on-error: true

    - name: Run type checking
      working-directory: ./client
      run: npx tsc --noEmit
      continue-on-error: true

    - name: Build frontend
      working-directory: ./client
      run: npm run build

    - name: Run frontend tests
      working-directory: ./client
      run: npm test

  # Security Audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Audit contract dependencies
      working-directory: ./contract
      run: npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Audit frontend dependencies
      working-directory: ./client
      run: npm audit --audit-level=moderate
      continue-on-error: true

  # Integration Tests
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [contract-tests, frontend-tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Install contract dependencies
      working-directory: ./contract
      run: npm install

    - name: Install frontend dependencies
      working-directory: ./client
      run: npm install

    - name: Compile contracts
      working-directory: ./contract
      run: npx hardhat compile

    - name: Build frontend
      working-directory: ./client
      run: npm run build

    - name: Verify deployment scripts exist
      run: |
        echo "Checking deployment scripts..."
        ls -la contract/scripts/
        echo "Integration tests completed successfully"

  # Production Build Check (only on main branch)
  production-build:
    name: Production Build Check
    runs-on: ubuntu-latest
    needs: [contract-tests, frontend-tests, security-audit, integration-tests]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Install frontend dependencies
      working-directory: ./client
      run: npm install

    - name: Build frontend for production
      working-directory: ./client
      run: npm run build

    - name: Production build completed
      run: |
        echo "âœ… Production build completed successfully"
        echo "ðŸ“¦ Frontend ready for deployment"
        echo "ðŸ”— Smart contracts ready for testnet deployment"

  # Code Quality Checks
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Install dependencies
      run: |
        cd contract && npm install
        cd ../client && npm install

    - name: Run Prettier check
      working-directory: ./client
      run: npm run format:check
      continue-on-error: true
      
    - name: Check for TODO comments
      run: |
        echo "Checking for TODO comments..."
        grep -r "TODO\|FIXME\|HACK" --include="*.ts" --include="*.tsx" --include="*.sol" . || true
        
    - name: Check file sizes
      run: |
        echo "Checking large files..."
        find . -type f -size +1M -not -path "./node_modules/*" -not -path "./.git/*" || true
